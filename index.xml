<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>jackson.tmm</title><link>https://ryantokmanmokmtm.github.io/personal-blogger/</link><description>Recent content on jackson.tmm</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sat, 19 Mar 2022 13:17:18 +0800</lastBuildDate><atom:link href="https://ryantokmanmokmtm.github.io/personal-blogger/index.xml" rel="self" type="application/rss+xml"/><item><title>簡易聊天室</title><link>https://ryantokmanmokmtm.github.io/personal-blogger/posts/simple-tcp-chatroom-ch/</link><pubDate>Sat, 19 Mar 2022 13:17:18 +0800</pubDate><guid>https://ryantokmanmokmtm.github.io/personal-blogger/posts/simple-tcp-chatroom-ch/</guid><description>簡易聊天室 實作的主要目的是熟悉go語言的並發機制
TCP Server 實作 User Structure 用於記錄已連接到TCP Server是信息
type User struct { ID int Addr string EnterAt time.Time MessageChan chan string //individual user channel } Message Structure 用於傳送信息且跳過/無視發送者自己
type Message struct { Owner int Msg string } 3個goroutine(concurrency)
enterChannel = make(chan *User) 用於給全部user發送新用戶進入聊天室.
leavingChannel = make(chan *User) 作用與 enterChannel一樣,但用於用戶離開聊天室之信息
messageChannel = make(chan Message, 8) 用於用戶與用戶之間的通訊
main function 在localhost:8080建立一個TCP Server 建立一個goroutine 用於廣播 使用無限迴圈用於等待與接收連接TCP的用戶 func main() { //open a TCP Server listen, err := net.</description></item><item><title>simple-TCP-Chatroom</title><link>https://ryantokmanmokmtm.github.io/personal-blogger/posts/simple-tcp-chatroom/</link><pubDate>Sat, 19 Mar 2022 13:08:48 +0800</pubDate><guid>https://ryantokmanmokmtm.github.io/personal-blogger/posts/simple-tcp-chatroom/</guid><description>simpleChatRoom Playing/Learning goroutine by making a simple char room with TCP
TCP Server implementation User Structure is used to record user info that connected to the TCP Server
type User struct { ID int Addr string EnterAt time.Time MessageChan chan string //individual user channel } Message Structure is used to ignore the user who sends the message to others
type Message struct { Owner int Msg string } Three gorouitne(concurrency)</description></item><item><title>About</title><link>https://ryantokmanmokmtm.github.io/personal-blogger/about/</link><pubDate>Thu, 28 Feb 2019 00:00:00 +0000</pubDate><guid>https://ryantokmanmokmtm.github.io/personal-blogger/about/</guid><description>Written in Go, Hugo is an open source static site generator available under the Apache Licence 2.0. Hugo supports TOML, YAML and JSON data file types, Markdown and HTML content files and uses shortcodes to add rich content. Other notable features are taxonomies, multilingual mode, image processing, custom output formats, HTML/CSS/JS minification and support for Sass SCSS workflows.
Hugo makes use of a variety of open source projects including:
https://github.</description></item><item><title>About</title><link>https://ryantokmanmokmtm.github.io/personal-blogger/about.pt-br/</link><pubDate>Thu, 28 Feb 2019 00:00:00 +0000</pubDate><guid>https://ryantokmanmokmtm.github.io/personal-blogger/about.pt-br/</guid><description>Escrito em Go, Hugo é um gerador de sites estáticos de código aberto disponível sobre a licença Apache Licence 2.0. O Hugo suporta TOML, YAML e JSON como arquivos de dados, Markdown e HTML como arquivos de conteúdo, e usa shortcodes para adicionar conteúdos ricos. Outras funcionalidades notaveis são taxonomias, modo multilingual, processamento de imagens, formatos de saída customizaveis, minificação de HTML/CSS/JS e suporte a fluxos SASS/SCSS.
O Hugo faz o uso de vários projetos de código aberto incluíndo:</description></item><item><title>Contact</title><link>https://ryantokmanmokmtm.github.io/personal-blogger/contact/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ryantokmanmokmtm.github.io/personal-blogger/contact/</guid><description>Follow me, @johndoe.</description></item><item><title>Contato</title><link>https://ryantokmanmokmtm.github.io/personal-blogger/contact/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ryantokmanmokmtm.github.io/personal-blogger/contact/</guid><description>Me siga em @joaoninguem.</description></item><item><title>Projects</title><link>https://ryantokmanmokmtm.github.io/personal-blogger/projects/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ryantokmanmokmtm.github.io/personal-blogger/projects/</guid><description>Nothing to see here&amp;hellip; Move along!</description></item><item><title>Projetos</title><link>https://ryantokmanmokmtm.github.io/personal-blogger/projects/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ryantokmanmokmtm.github.io/personal-blogger/projects/</guid><description>Nada para ver aqui.. Circulando!</description></item></channel></rss>